#include "Matrice.decah"

class Life {
    int[][] plateau;
    int[][] newPlateau;
    int[][] inter;
    int taille;

    void init(int n) {
        int i = 0;
        int j = 0;
        plateau = new int[n][n];
        newPlateau = new int[n][n];
        while (i < n) {
            j = 0;
            while (j < n) {
                plateau[i][j] = 0;
                j = j + 1;
            }
            i = i + 1;
        }

        this.taille = n;
    }


    void printJeu() {
        int i = 0;
        int j = 0;
        while (i < this.taille) {
            j = 0;
            while (j < this.taille) {
                print(plateau[i][j], " ");
                j = j + 1;
            }
            println();
            i = i + 1;
        }
    }

    void setLiving(int i, int j) {
        plateau[i][j] = 1;
    }

    void setDead(int i, int j) {
        plateau[i][j] = 0;
    }

    int countNeighbourLiving(int i, int j) {
        int nb = 0;
        boolean i_moins = i - 1 >= 0;
        boolean i_plus = i + 1 < this.taille;
        boolean j_moins = j - 1 >= 0;
        boolean j_plus = j + 1 < this.taille;
        if (i_moins) {
            if (j_moins && plateau[i-1][j-1] == 1) {
                nb = nb + 1;
            }
            if (j_plus && plateau[i-1][j+1] == 1) {
                nb = nb + 1;
            }
            if (plateau[i-1][j] == 1) {
                nb = nb + 1;
            }
        }
        if (i_plus) {
            if (j_moins && plateau[i+1][j-1] == 1) {
                nb = nb + 1;
            }
            if (j_plus && plateau[i+1][j+1] == 1) {
                nb = nb + 1;
            }
            if (plateau[i+1][j] == 1) {
                nb = nb + 1;
            }
        }
        if (j_moins) {
            if (plateau[i][j-1] == 1) {
                nb = nb + 1;
            }
        }
        if (j_plus) {
            if (plateau[i][j+1] == 1) {
                nb = nb + 1;
            }
        }
        return nb;
    }


    void newState(int i, int j) {
        int nb_neighbour = countNeighbourLiving(i,j);
        if (nb_neighbour == 3) {
            newPlateau[i][j] = 1;
        }
        else if (nb_neighbour < 2 || nb_neighbour > 3) {
            newPlateau[i][j] = 0;
        } else {
            newPlateau[i][j] = plateau[i][j];
        }
    }

    void begin() {
        int i = 0;
        int j = 0;
        while (i < this.taille) {
            j = 0;
            while (j < this.taille) {
                newPlateau[i][j] = plateau[i][j];
                j = j + 1;
            }
            i = i + 1;
        }

    }
    void tour() {
        int i = 0;
        int j = 0;
        begin();
        while (i < this.taille) {
            j = 0;
            while (j < this.taille) {
                this.newState(i, j);
                j = j + 1;
            }
            i = i + 1;
        }
        inter = plateau;
        plateau = newPlateau;
        newPlateau = inter;
    }
}


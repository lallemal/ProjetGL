DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:42) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:47) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:51) - verify listClass: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:58) - verify listClassMembers: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:62) - verify listClassMembers : end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:69) - verify listClassBody: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:73) - verify listClassBody : end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:31) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:41) - verify ListDeclVar : start
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start tab
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:135) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:143) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start mat
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:135) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:143) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start i
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:45) - verify ListDeclVar : end
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:33) - Verify ListInst : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:143) - verify AbstractExpr Inst : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:32) - verify AbstractOpArith : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:49) - verify AbstractOpArith : end
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:32) - verify AbstractOpArith : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.AbstractOpArith.verifyExpr(AbstractOpArith.java:49) - verify AbstractOpArith : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:131) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:145) - verify AbstractExpr Inst : end
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:38) - Verify ListInst : stop
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:42) - verify Main: end
`> [7, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [7, 0] Main
      +> ListDeclVar [List with 3 elements]
      |  []> [8, 9] DeclVar
      |  ||  +> [8, 1] IdentifierArray
      |  ||  |  type: float_1
      |  ||  +> [8, 9] Identifier (tab)
      |  ||  |  definition: variable defined at [8, 9], type=float_1
      |  ||  `> [8, 15] Initialization
      |  ||     `> [8, 15] NewArray
      |  ||        type: float_1
      |  ||        `> [8, 19] Identifier (float)
      |  ||           definition: type (builtin), type=float
      |  ||        +> ListExpr [List with 1 elements]
      |  ||        |  []> [8, 25] Int (10)
      |  ||        |      type: int
      |  []> [9, 9] DeclVar
      |  ||  +> [9, 1] IdentifierArray
      |  ||  |  type: int_2
      |  ||  +> [9, 9] Identifier (mat)
      |  ||  |  definition: variable defined at [9, 9], type=int_2
      |  ||  `> [9, 15] Initialization
      |  ||     `> [9, 15] NewArray
      |  ||        type: int_2
      |  ||        `> [9, 19] Identifier (int)
      |  ||           definition: type (builtin), type=int
      |  ||        +> ListExpr [List with 2 elements]
      |  ||        |  []> [9, 23] Int (10)
      |  ||        |  ||  type: int
      |  ||        |  []> [9, 27] Int (10)
      |  ||        |      type: int
      |  []> [10, 5] DeclVar
      |      +> [10, 1] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [10, 5] Identifier (i)
      |      |  definition: variable defined at [10, 5], type=int
      |      `> NoInitialization
      `> ListInst [List with 1 elements]
         []> [12, 1] Assign
             type: float
             +> [12, 1] ArraySelection
             |  type: float
             |  +> [12, 1] Identifier (tab)
             |  |  definition: variable defined at [8, 9], type=float_1
             |  +> ListExpr [List with 1 elements]
             |  |  []> [12, 5] Int (0)
             |  |      type: int
             `> ConvFloat
                type: float
                `> [12, 10] Plus
                   type: int
                   +> [12, 11] ArraySelection
                   |  type: int
                   |  +> [12, 11] Identifier (mat)
                   |  |  definition: variable defined at [9, 9], type=int_2
                   |  +> ListExpr [List with 2 elements]
                   |  |  []> [12, 15] Int (0)
                   |  |  ||  type: int
                   |  |  []> [12, 18] Int (0)
                   |  |      type: int
                   `> [12, 23] Int (1)
                      type: int

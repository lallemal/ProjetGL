DEBUG fr.ensimag.deca.tree.Program.verifyProgram(Program.java:42) - verify program: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:47) - verify listClass: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClass(ListDeclClass.java:51) - verify listClass: end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:58) - verify listClassMembers: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassMembers(ListDeclClass.java:62) - verify listClassMembers : end
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:69) - verify listClassBody: start
DEBUG fr.ensimag.deca.tree.ListDeclClass.verifyListClassBody(ListDeclClass.java:73) - verify listClassBody : end
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:31) - verify Main: start
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:41) - verify ListDeclVar : start
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start x
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start matEmpty
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:111) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start y
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start r
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start s
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:136) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:144) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start tab2
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start semiEmptyMat
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start copyS
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start bigMat
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:136) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:144) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:40) - verify DeclVar : start bigMat2
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:136) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:144) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.DeclVar.verifyDeclVar(DeclVar.java:61) - Verify DeclVar : end
DEBUG fr.ensimag.deca.tree.ListDeclVar.verifyListDeclVariable(ListDeclVar.java:45) - verify ListDeclVar : end
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:33) - Verify ListInst : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:143) - verify AbstractExpr Inst : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:136) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:144) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:145) - verify AbstractExpr Inst : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:143) - verify AbstractExpr Inst : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:103) - verify AbstractExpr RValue : start
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyRValue(AbstractExpr.java:134) - verify AbstractExpr Rvalue : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:145) - verify AbstractExpr Inst : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:143) - verify AbstractExpr Inst : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:172) - verify Identifier Expr : start
DEBUG fr.ensimag.deca.tree.Identifier.verifyExpr(Identifier.java:182) - verify Identifier Expr : end
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:136) - Verify RValue Array : start
DEBUG fr.ensimag.deca.tree.NewArray.verifyRValue(NewArray.java:144) - Verify RValue Array : end
DEBUG fr.ensimag.deca.tree.AbstractExpr.verifyInst(AbstractExpr.java:145) - verify AbstractExpr Inst : end
DEBUG fr.ensimag.deca.tree.ListInst.verifyListInst(ListInst.java:38) - Verify ListInst : stop
DEBUG fr.ensimag.deca.tree.Main.verifyMain(Main.java:42) - verify Main: end
`> [7, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [7, 0] Main
      +> ListDeclVar [List with 10 elements]
      |  []> [8, 12] DeclVar
      |  ||  +> [8, 4] IdentifierArray
      |  ||  |  type: int_2
      |  ||  +> [8, 12] Identifier (x)
      |  ||  |  definition: variable defined at [8, 12], type=int_2
      |  ||  `> [8, 16] Initialization
      |  ||     `> [8, 16] ArrayLiteral
      |  ||        type: int_2
      |  ||        +> [8, 17] ListExpr [List with 2 elements]
      |  ||        |  []> [8, 17] ArrayLiteral
      |  ||        |  ||  type: int_1
      |  ||        |  ||  +> [8, 18] ListExpr [List with 2 elements]
      |  ||        |  ||  |  []> [8, 18] Int (1)
      |  ||        |  ||  |  ||  type: int
      |  ||        |  ||  |  []> [8, 20] Int (2)
      |  ||        |  ||  |      type: int
      |  ||        |  []> [8, 24] ArrayLiteral
      |  ||        |      type: int_1
      |  ||        |      +> [8, 25] ListExpr [List with 2 elements]
      |  ||        |      |  []> [8, 25] Int (1)
      |  ||        |      |  ||  type: int
      |  ||        |      |  []> [8, 27] Int (2)
      |  ||        |      |      type: int
      |  []> [9, 9] DeclVar
      |  ||  +> [9, 1] IdentifierArray
      |  ||  |  type: int_2
      |  ||  +> [9, 9] Identifier (matEmpty)
      |  ||  |  definition: variable defined at [9, 9], type=int_2
      |  ||  `> [9, 20] Initialization
      |  ||     `> [9, 20] ArrayLiteral
      |  ||        type: emptyArray
      |  ||        +> ListExpr [List with 0 elements]
      |  []> [11, 14] DeclVar
      |  ||  +> [11, 4] IdentifierArray
      |  ||  |  type: int_3
      |  ||  +> [11, 14] Identifier (y)
      |  ||  |  definition: variable defined at [11, 14], type=int_3
      |  ||  `> [11, 18] Initialization
      |  ||     `> [11, 18] ArrayLiteral
      |  ||        type: int_3
      |  ||        +> [11, 19] ListExpr [List with 2 elements]
      |  ||        |  []> [11, 19] ArrayLiteral
      |  ||        |  ||  type: int_2
      |  ||        |  ||  +> [11, 20] ListExpr [List with 2 elements]
      |  ||        |  ||  |  []> [11, 20] ArrayLiteral
      |  ||        |  ||  |  ||  type: int_1
      |  ||        |  ||  |  ||  +> [11, 21] ListExpr [List with 1 elements]
      |  ||        |  ||  |  ||  |  []> [11, 21] Int (1)
      |  ||        |  ||  |  ||  |      type: int
      |  ||        |  ||  |  []> [11, 25] ArrayLiteral
      |  ||        |  ||  |      type: int_1
      |  ||        |  ||  |      +> [11, 26] ListExpr [List with 1 elements]
      |  ||        |  ||  |      |  []> [11, 26] Int (1)
      |  ||        |  ||  |      |      type: int
      |  ||        |  []> [11, 31] ArrayLiteral
      |  ||        |      type: int_2
      |  ||        |      +> [11, 32] ListExpr [List with 2 elements]
      |  ||        |      |  []> [11, 32] ArrayLiteral
      |  ||        |      |  ||  type: int_1
      |  ||        |      |  ||  +> [11, 33] ListExpr [List with 1 elements]
      |  ||        |      |  ||  |  []> [11, 33] Int (3)
      |  ||        |      |  ||  |      type: int
      |  ||        |      |  []> [11, 37] ArrayLiteral
      |  ||        |      |      type: int_1
      |  ||        |      |      +> [11, 38] ListExpr [List with 1 elements]
      |  ||        |      |      |  []> [11, 38] Int (5)
      |  ||        |      |      |      type: int
      |  []> [12, 8] DeclVar
      |  ||  +> [12, 4] Identifier (int)
      |  ||  |  definition: type (builtin), type=int
      |  ||  +> [12, 8] Identifier (r)
      |  ||  |  definition: variable defined at [12, 8], type=int
      |  ||  `> [12, 12] Initialization
      |  ||     `> [12, 12] Int (3)
      |  ||        type: int
      |  []> [13, 10] DeclVar
      |  ||  +> [13, 4] IdentifierArray
      |  ||  |  type: int_1
      |  ||  +> [13, 10] Identifier (s)
      |  ||  |  definition: variable defined at [13, 10], type=int_1
      |  ||  `> [13, 14] Initialization
      |  ||     `> [13, 14] NewArray
      |  ||        type: int_1
      |  ||        `> [13, 18] Identifier (int)
      |  ||           definition: type (builtin), type=int
      |  ||        +> ListExpr [List with 1 elements]
      |  ||        |  []> [13, 22] Identifier (r)
      |  ||        |      definition: variable defined at [12, 8], type=int
      |  []> [14, 10] DeclVar
      |  ||  +> [14, 4] IdentifierArray
      |  ||  |  type: int_1
      |  ||  +> [14, 10] Identifier (tab2)
      |  ||  |  definition: variable defined at [14, 10], type=int_1
      |  ||  `> NoInitialization
      |  []> [15, 12] DeclVar
      |  ||  +> [15, 4] IdentifierArray
      |  ||  |  type: int_2
      |  ||  +> [15, 12] Identifier (semiEmptyMat)
      |  ||  |  definition: variable defined at [15, 12], type=int_2
      |  ||  `> [15, 27] Initialization
      |  ||     `> [15, 27] ArrayLiteral
      |  ||        type: int_2
      |  ||        +> [15, 29] ListExpr [List with 2 elements]
      |  ||        |  []> [15, 29] ArrayLiteral
      |  ||        |  ||  type: int_1
      |  ||        |  ||  +> [15, 30] ListExpr [List with 3 elements]
      |  ||        |  ||  |  []> [15, 30] Int (1)
      |  ||        |  ||  |  ||  type: int
      |  ||        |  ||  |  []> [15, 33] Int (2)
      |  ||        |  ||  |  ||  type: int
      |  ||        |  ||  |  []> [15, 36] Int (3)
      |  ||        |  ||  |      type: int
      |  ||        |  []> [15, 40] ArrayLiteral
      |  ||        |      type: int_1
      |  ||        |      +> [15, 41] ListExpr [List with 3 elements]
      |  ||        |      |  []> [15, 41] Int (4)
      |  ||        |      |  ||  type: int
      |  ||        |      |  []> [15, 44] Int (5)
      |  ||        |      |  ||  type: int
      |  ||        |      |  []> [15, 47] Int (6)
      |  ||        |      |      type: int
      |  []> [16, 10] DeclVar
      |  ||  +> [16, 4] IdentifierArray
      |  ||  |  type: int_1
      |  ||  +> [16, 10] Identifier (copyS)
      |  ||  |  definition: variable defined at [16, 10], type=int_1
      |  ||  `> [16, 18] Initialization
      |  ||     `> [16, 18] Identifier (s)
      |  ||        definition: variable defined at [13, 10], type=int_1
      |  []> [18, 13] DeclVar
      |  ||  +> [18, 1] IdentifierArray
      |  ||  |  type: int_4
      |  ||  +> [18, 13] Identifier (bigMat)
      |  ||  |  definition: variable defined at [18, 13], type=int_4
      |  ||  `> [18, 22] Initialization
      |  ||     `> [18, 22] NewArray
      |  ||        type: int_4
      |  ||        `> [18, 26] Identifier (int)
      |  ||           definition: type (builtin), type=int
      |  ||        +> ListExpr [List with 4 elements]
      |  ||        |  []> [18, 30] Int (3)
      |  ||        |  ||  type: int
      |  ||        |  []> [18, 33] Int (2)
      |  ||        |  ||  type: int
      |  ||        |  []> [18, 36] Int (1)
      |  ||        |  ||  type: int
      |  ||        |  []> [18, 39] Int (2)
      |  ||        |      type: int
      |  []> [19, 11] DeclVar
      |      +> [19, 1] IdentifierArray
      |      |  type: int_3
      |      +> [19, 11] Identifier (bigMat2)
      |      |  definition: variable defined at [19, 11], type=int_3
      |      `> [19, 21] Initialization
      |         `> [19, 21] NewArray
      |            type: int_3
      |            `> [19, 25] Identifier (int)
      |               definition: type (builtin), type=int
      |            +> ListExpr [List with 3 elements]
      |            |  []> [19, 29] Int (2)
      |            |  ||  type: int
      |            |  []> [19, 32] Int (1)
      |            |  ||  type: int
      |            |  []> [19, 35] Int (2)
      |            |      type: int
      `> ListInst [List with 3 elements]
         []> [24, 4] Assign
         ||  type: int_4
         ||  +> [24, 4] Identifier (bigMat)
         ||  |  definition: variable defined at [18, 13], type=int_4
         ||  `> [24, 13] NewArray
         ||     type: int_4
         ||     `> [24, 17] Identifier (int)
         ||        definition: type (builtin), type=int
         ||     +> ListExpr [List with 4 elements]
         ||     |  []> [24, 21] Int (4)
         ||     |  ||  type: int
         ||     |  []> [24, 24] Int (3)
         ||     |  ||  type: int
         ||     |  []> [24, 27] Int (2)
         ||     |  ||  type: int
         ||     |  []> [24, 30] Int (1)
         ||     |      type: int
         []> [25, 1] Assign
         ||  type: int
         ||  +> [25, 1] ArraySelection
         ||  |  type: int
         ||  |  +> [25, 1] Identifier (bigMat)
         ||  |  |  definition: variable defined at [18, 13], type=int_4
         ||  |  +> ListExpr [List with 4 elements]
         ||  |  |  []> [25, 8] Int (0)
         ||  |  |  ||  type: int
         ||  |  |  []> [25, 11] Int (0)
         ||  |  |  ||  type: int
         ||  |  |  []> [25, 14] Int (0)
         ||  |  |  ||  type: int
         ||  |  |  []> [25, 17] Int (0)
         ||  |  |      type: int
         ||  `> [25, 22] Int (17)
         ||     type: int
         []> [26, 4] Assign
             type: int_1
             +> [26, 4] Identifier (tab2)
             |  definition: variable defined at [14, 10], type=int_1
             `> [26, 11] NewArray
                type: int_1
                `> [26, 15] Identifier (int)
                   definition: type (builtin), type=int
                +> ListExpr [List with 1 elements]
                |  []> [26, 19] Int (10)
                |      type: int

`> [7, 0] Program
   +> ListDeclClass [List with 0 elements]
   `> [7, 0] Main
      +> ListDeclVar [List with 1 elements]
      |  []> [8, 8] DeclVar
      |      +> [8, 4] Identifier (int)
      |      |  definition: type (builtin), type=int
      |      +> [8, 8] Identifier (i)
      |      |  definition: variable defined at [8, 8], type=int
      |      `> [8, 12] Initialization
      |         `> [8, 12] Int (2)
      |            type: int
      `> ListInst [List with 1 elements]
         []> [9, 4] IfThenElse
             +> [9, 8] Equals
             |  type: boolean
             |  +> [9, 8] Identifier (i)
             |  |  definition: variable defined at [8, 8], type=int
             |  `> [9, 13] Int (0)
             |     type: int
             +> ListInst [List with 1 elements]
             |  []> [10, 8] Print
             |      `> [10, 14] ListExpr [List with 1 elements]
             |         []> [10, 14] StringLiteral (1er if)
             |             type: string
             `> ListInst [List with 1 elements]
                []> [13, 8] IfThenElse
                    +> [13, 12] Equals
                    |  type: boolean
                    |  +> [13, 12] Identifier (i)
                    |  |  definition: variable defined at [8, 8], type=int
                    |  `> [13, 17] Int (1)
                    |     type: int
                    +> ListInst [List with 1 elements]
                    |  []> [14, 12] Print
                    |      `> [14, 18] ListExpr [List with 1 elements]
                    |         []> [14, 18] StringLiteral (2e if)
                    |             type: string
                    `> ListInst [List with 1 elements]
                       []> [17, 12] IfThenElse
                           +> [17, 16] Equals
                           |  type: boolean
                           |  +> [17, 16] Identifier (i)
                           |  |  definition: variable defined at [8, 8], type=int
                           |  `> [17, 21] Int (2)
                           |     type: int
                           +> ListInst [List with 1 elements]
                           |  []> [18, 16] Print
                           |      `> [18, 22] ListExpr [List with 1 elements]
                           |         []> [18, 22] StringLiteral (3e if)
                           |             type: string
                           `> ListInst [List with 0 elements]

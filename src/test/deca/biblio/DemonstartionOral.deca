#include "Matrice.decah"
{
	float[][] tab1 = {{1.0, 0.0, 5.0}, {2.0, 1.0, 6.0}, {3.0, 4.0, 0.0}};
	float[][] tab2 = {{1.2, 2.7, 4.1}, {5.2, 6.3, 7.2}, {8.1, 14.2, 9.0}};
	float rA;
	float rB;
	MatriceFloat mat1 = new MatriceFloat();
	MatriceFloat mat2 = new MatriceFloat();
	MatriceFloat inv1 = new MatriceFloat();

    int[][] init = {{4,4,4,1},{3,5,2,1},{1,2,1,2},{1,1,5,5}};
    MatriceFloat r = new MatriceFloat();
    MatriceFloat q = new MatriceFloat();
    MatriceFloat C = new MatriceFloat();
    
	
	mat2.setInit(tab2, 3, 3);
	mat1.setInit(tab1, 3, 3);
	
	println("Matrice A:");
	mat1.affichage();
	
	println("Transposée de la matrice A:");
	mat1.transpose().affichage();
	
	println("Inverse de la matrice A:");
	mat1.inverse().affichage();
	
	println("Matrice B:");
	mat2.affichage();
	
	println("Somme de A et B:");
	mat2.sumMat(mat1).affichage();
	
	println("Multiplication de A par B:");
	mat2.prodMat(mat1).affichage();
	
	println("Permuation des lignes 1 et 2 de la matrice A");
	mat1.echange(0, 1);
	mat1.affichage();
	mat1.echange(1, 0);
	println("Déterminant de la matrice A: ", mat1.determinant());
	println("Déterminant de la matrice A via numpy: ", 0.9999999999999967);
	println("Déterminant de la matrice B: ", mat2.determinant());
	println("Déterminant de la matrice B via numpy: ", 69.97699999999998);
	
	println("Multiplication de la matrice A par le scalaire 2: ");
	mat1.multScalaire(2.0).affichage();
	
	println("Vecteur propre de la matrice A: ");
	rA = mat1.Puissancevpvectp();
	
	println("Vecteur propre de la matrice B: ");
	rB = mat2.Puissancevpvectp();
	
	println("Rayon spectral de la matrice A: ", rA);
	println("Rayon spectral de la matrice A via numpy: ", 7.25602242);
	
	println("Rayon spectral de la matrice B: ", rB);
	println("Rayon spectral de la matrice B via numpy: ", 	20.33033523);
	
	
	C.setInitInt(init, 3, 3);
    println("matrice C");
    C.affichage();

    println("matrice triangulaire contenant une appox des vlp");
	println("Décomposition QR de la matrice C avec 25 itérations: ");

	println("Q= ");
    q = C.calculQt();
    q.affichage();
   	println(" Résultat de R avec numpy: ");
	println("[[-0.76980036,  0.58106795,  0.22548256, -0.13756837],");
	println(" [-0.57735027, -0.68483009,  0.06230439,  0.44021879],");
	println(" [-0.19245009, -0.41504854, -0.12460878, -0.88043758],");
	println(" [-0.19245009,  0.14526699, -0.96423463,  0.1100547 ]]"); 
    
     
    println("Matrice R = ");
    r = q.prodMat(C);
    r.affichage();
    
	println(" Résultat de R avec numpy: ");
	println("[[-5.19615242, -6.54330305, -5.38860251, -2.69430126],");
	println(" [ 0.        , -1.78470871,  1.26589804, -0.20752427],");
	println(" [ 0.        ,  0.        , -3.91924293, -4.78260378],");
	println(" [ 0.        ,  0.        ,  0.        , -0.90795125]]");

}
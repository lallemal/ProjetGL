#include "Matrice.Decah"
{
    Racine r = new Racine();
    float nu = 0;
    float res;
    float [][] mat2 = {{-3.0,0.0,0.0},{17.0E0,13.0E0,-7.0E0},{16.0E0,14.0E0,-8.0E0}};
    MatriceFloat vectn = new MatriceFloat();
    MatriceFloat m2 = new MatriceFloat();
    // teste le calcul de la norme

    vectn.setInit(no,3,1);
    vectn.affichage();
    println("calcul de la norme");
    res = vectn.normeVect();
    println(res);
    // Test valeur propre maximal
    m2.setInitFloat(mat2, 3, 3);
    m2.affichage();
    res = m2.Puissancevpvectp();
    println(" vlp= ",res );
    res =m2.PuissanceInverse(nu);
    println(" vlp= ", res);
    res = m2.PuissanceInverse(nu2);
    println(" vlp= ",res );
    //println("AX=");
    //m2.prodMat(vect).print();
    //println("lX=");
    //vect.multScalaire(6).print();;

}
